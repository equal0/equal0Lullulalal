package client.gui;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dialog;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

import vo.Member;
import vo.Restaurant;

public class ReplyRestaurantGUI extends JDialog {

	private JPanel north;
	private JLabel lbl_message;
	private JPanel center;
	private JPanel recommend;
	private ImageIcon image;
	private JLabel lbl_image;
	private JLabel lbl_name;
	private JLabel lbl_type;
	private JLabel lbl_score;
	private JLabel lbl_location;

	public ReplyRestaurantGUI(Restaurant restaurant,Member requestor, Member member) {
		// super(main, Dialog.ModalityType.APPLICATION_MODAL);

		Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
		
		this.setTitle(requestor.getId());
		this.setBounds(screenSize.width - 260, screenSize.height - 190, 260, 190);
		//this.setUndecorated(true);

		north = new JPanel();
		FlowLayout flowLayout = (FlowLayout) north.getLayout();
		flowLayout.setAlignment(FlowLayout.RIGHT);
		getContentPane().add(north, BorderLayout.NORTH);

		lbl_message = null;
		if (member.getId().equals("¿Ü°èÀÎ »ß·ç»×»×")) {
			lbl_message = new JLabel("¿©±â ¾î¶§? ÃßÃµ¸ÀÁý!");
		} else
			lbl_message = new JLabel(member.getId() + "´ÔÀÌ ÃßÃµÇÑ °÷!");
		north.add(lbl_message);
		lbl_message.setFont(new Font("³ª´®°íµñ", Font.BOLD, 13));
		lbl_message.setForeground(new Color(255, 33, 9));


		center = new JPanel();
		center.setLayout(null);
		getContentPane().add(center, BorderLayout.CENTER);

		recommend = new JPanel();
		recommend.setLayout(null);
		recommend.setBounds(3, 1, 200, 74);
		recommend.setBackground(new Color(255, 190, 141));
		center.add(recommend);
		recommend.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				System.out.println("¾å¾å¾å¾å");
				
				
				
				dispose();
				super.mouseClicked(e);
			}
		});

		image = restaurant.getImages().get(3);
		Image getIcon = image.getImage().getScaledInstance(90, 70, Image.SCALE_DEFAULT);
		ImageIcon setImage = new ImageIcon(getIcon);

		lbl_image = new JLabel(setImage);
		lbl_image.setBounds(2, 2, 90, 70);
		recommend.add(lbl_image);
		
		lbl_name = new JLabel(restaurant.getRestaurantName());
		lbl_name.setBounds(96, 19, 105, 20);
		lbl_name.setFont(new Font("³ª´®°íµñ", Font.BOLD, 16));
		recommend.add(lbl_name);

		String type = null;
		if (restaurant.getCategory().getType() == 1) {
			type = "ÇÑ ½Ä";
		} else if (restaurant.getCategory().getType() == 2) {
			type = "Áß ½Ä";
		} else if (restaurant.getCategory().getType() == 3) {
			type = "ÀÏ ½Ä";
		} else if (restaurant.getCategory().getType() == 4) {
			type = "¾ç ½Ä";
		}
		lbl_type = new JLabel(type);
		lbl_type.setFont(new Font("³ª´®¹Ù¸¥°íµñ", Font.PLAIN, 10));
		recommend.add(lbl_type);
		lbl_type.setBounds(96, 39, 105, 20);
		
		
		String score = null;
		if (restaurant.getCategory().getEvaluation().getAverage() < 1.5) {
			score = "¡Ù¡Ù¡Ù¡Ù¡Ú";
		} else if (restaurant.getCategory().getEvaluation().getAverage() < 2.5) {
			score = "¡Ù¡Ù¡Ù¡Ú¡Ú";
		} else if (restaurant.getCategory().getEvaluation().getAverage() < 3.5) {
			score = "¡Ù¡Ù¡Ú¡Ú¡Ú";
		} else if (restaurant.getCategory().getEvaluation().getAverage() < 4.5) {
			score = "¡Ù¡Ú¡Ú¡Ú¡Ú";
		} else if (restaurant.getCategory().getEvaluation().getAverage() <= 5.0) {
			score = "¡Ú¡Ú¡Ú¡Ú¡Ú";
		}
		lbl_score = new JLabel(score);
		lbl_score.setBounds(140, 0,105,20);
		lbl_score.setFont(new Font("³ª´®¹Ù¸¥°íµñ", Font.PLAIN, 12));
		recommend.add(lbl_score);
		
		String gugu = restaurant.getCategory().getLocation().getSigungu();
		String roro = restaurant.getCategory().getLocation().getStreetName();
		lbl_location = new JLabel(gugu+roro);
		lbl_location.setFont(new Font("³ª´®¹Ù¸¥°íµñ", Font.PLAIN, 10));
		lbl_location.setBounds(96,57,105,20);
		recommend.add(lbl_location);
		
		repaint();

		// south ´Ù¸¥ ÃßÃµ ¹Þ±â¹öÆ°, ¿Ï·á¹öÆ°

		this.setVisible(true);

	}


}
